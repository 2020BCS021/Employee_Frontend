{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.jsx","services/EmployeeService.js","components/ListEmployeeComponent.jsx","components/CreateEmployeeComponent.jsx","components/UpdateEmployeeComponent.jsx","components/ViewEmployeeComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["HeaderComponent","className","href","FooterComponent","EMPLOYEE_API_BASE_URL","axios","get","employee","post","employeeId","put","delete","ListEmployeeComponent","useState","employees","setEmployees","history","useHistory","useEffect","EmployeeService","getEmployees","then","res","data","onClick","push","map","key","id","firstName","lastName","emailId","style","marginLeft","deleteEmployee","filter","CreateEmployeeComponent","useParams","setEmployee","getEmployeeById","employeeData","handleChange","e","target","name","value","placeholder","onChange","preventDefault","createEmployee","updateEmployee","UpdateEmployeeComponent","ViewEmployeeComponent","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dc1fab25.chunk.js","sourcesContent":["import React from 'react';\n\nconst HeaderComponent = () => {\n    return (\n        <div>\n            <header>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <div><a href=\"https://javaguides.net\" className=\"navbar-brand\">Employee Management App</a></div>\n                </nav>\n            </header>\n        </div>\n    );\n};\n\nexport default HeaderComponent;\n","import React from 'react';\n\nconst FooterComponent = () => {\n    return (\n        <footer className=\"footer mt-auto py-3 bg-dark text-center text-light\">\n            <div className=\"container\">\n                <span >All Rights Reserved 2024 </span>\n            </div>\n        </footer>\n    );\n};\n\nexport default FooterComponent;\n","import axios from 'axios';\n\nconst EMPLOYEE_API_BASE_URL = \"https://employeebackend-fwcpgzd7ggcgd5bt.westindia-01.azurewebsites.net/api/v1/employees\";\n\nclass EmployeeService {\n\n    getEmployees(){\n        return axios.get(EMPLOYEE_API_BASE_URL);\n    }\n\n    createEmployee(employee){\n        return axios.post(EMPLOYEE_API_BASE_URL, employee);\n    }\n\n    getEmployeeById(employeeId){\n        return axios.get(EMPLOYEE_API_BASE_URL + '/' + employeeId);\n    }\n\n    updateEmployee(employee, employeeId){\n        return axios.put(EMPLOYEE_API_BASE_URL + '/' + employeeId, employee);\n    }\n\n    deleteEmployee(employeeId){\n        return axios.delete(EMPLOYEE_API_BASE_URL + '/' + employeeId);\n    }\n}\n\nexport default new EmployeeService()","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService';\n\nconst ListEmployeeComponent = () => {\n    const [employees, setEmployees] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        EmployeeService.getEmployees().then((res) => {\n            setEmployees(res.data);\n        });\n    }, []);\n\n    const addEmployee = () => {\n        history.push('/add-employee/_add');\n    };\n\n    const editEmployee = (id) => {\n        history.push(`/add-employee/${id}`);\n    };\n\n    const deleteEmployee = (id) => {\n        EmployeeService.deleteEmployee(id).then(() => {\n            setEmployees(employees.filter(employee => employee.id !== id));\n        });\n    };\n\n    const viewEmployee = (id) => {\n        history.push(`/view-employee/${id}`);\n    };\n\n    return (\n        <div>\n            <h2 className=\"text-center\">Employees List</h2>\n            <div className=\"row mb-3\">\n                <button className=\"btn btn-primary\" onClick={addEmployee}>Add Employee</button>\n            </div>\n{/*             <br /> */}\n            <div className=\"row\">\n                <table className=\"table table-striped table-bordered\">\n                    <thead>\n                        <tr>\n                            <th>Employee First Name</th>\n                            <th>Employee Last Name</th>\n                            <th>Employee Email Id</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {employees.map(employee => (\n                            <tr key={employee.id}>\n                                <td>{employee.firstName}</td>\n                                <td>{employee.lastName}</td>\n                                <td>{employee.emailId}</td>\n                                <td>\n                                    <button onClick={() => editEmployee(employee.id)} className=\"btn btn-info\">Update</button>\n                                    <button style={{ marginLeft: \"10px\" }} onClick={() => deleteEmployee(employee.id)} className=\"btn btn-danger\">Delete</button>\n                                    <button style={{ marginLeft: \"10px\" }} onClick={() => viewEmployee(employee.id)} className=\"btn btn-info\">View</button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default ListEmployeeComponent;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService';\n\nconst CreateEmployeeComponent = () => {\n    const { id } = useParams();\n    const history = useHistory();\n\n    const [employee, setEmployee] = useState({\n        firstName: '',\n        lastName: '',\n        emailId: ''\n    });\n\n    useEffect(() => {\n        if (id === '_add') {\n            return;\n        } else {\n            EmployeeService.getEmployeeById(id).then((res) => {\n                const employeeData = res.data;\n                setEmployee({\n                    firstName: employeeData.firstName,\n                    lastName: employeeData.lastName,\n                    emailId: employeeData.emailId\n                });\n            });\n        }\n    }, [id]);\n\n    const saveOrUpdateEmployee = (e) => {\n        e.preventDefault();\n        if (id === '_add') {\n            EmployeeService.createEmployee(employee).then(() => {\n                history.push('/employees');\n            });\n        } else {\n            EmployeeService.updateEmployee(employee, id).then(() => {\n                history.push('/employees');\n            });\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setEmployee({ ...employee, [name]: value });\n    };\n\n    const cancel = () => {\n        history.push('/employees');\n    };\n\n    const getTitle = () => {\n        return <h3 className=\"text-center\">{id === '_add' ? 'Add Employee' : 'Update Employee'}</h3>;\n    };\n\n    return (\n        <div>\n            <br />\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"card col-md-6 offset-md-3\">\n                        {getTitle()}\n                        <div className=\"card-body\">\n                            <form>\n                                <div className=\"form-group\">\n                                    <label>First Name:</label>\n                                    <input\n                                        placeholder=\"First Name\"\n                                        name=\"firstName\"\n                                        className=\"form-control\"\n                                        value={employee.firstName}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Last Name:</label>\n                                    <input\n                                        placeholder=\"Last Name\"\n                                        name=\"lastName\"\n                                        className=\"form-control\"\n                                        value={employee.lastName}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Email Id:</label>\n                                    <input\n                                        placeholder=\"Email Address\"\n                                        name=\"emailId\"\n                                        className=\"form-control\"\n                                        value={employee.emailId}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n\n                                <button className=\"btn btn-success\" onClick={saveOrUpdateEmployee}>\n                                    Save\n                                </button>\n                                <button className=\"btn btn-danger\" onClick={cancel} style={{ marginLeft: '10px' }}>\n                                    Cancel\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CreateEmployeeComponent;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService';\n\nconst UpdateEmployeeComponent = () => {\n    const { id } = useParams();\n    const history = useHistory();\n\n    const [employee, setEmployee] = useState({\n        firstName: '',\n        lastName: '',\n        emailId: ''\n    });\n\n    useEffect(() => {\n        EmployeeService.getEmployeeById(id).then((res) => {\n            let employeeData = res.data;\n            setEmployee({\n                firstName: employeeData.firstName,\n                lastName: employeeData.lastName,\n                emailId: employeeData.emailId\n            });\n        });\n    }, [id]);\n\n    const updateEmployee = (e) => {\n        e.preventDefault();\n        EmployeeService.updateEmployee(employee, id).then(() => {\n            history.push('/employees');\n        });\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setEmployee({ ...employee, [name]: value });\n    };\n\n    const cancel = () => {\n        history.push('/employees');\n    };\n\n    return (\n        <div>\n            <br />\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"card col-md-6 offset-md-3\">\n                        <h3 className=\"text-center\">Update Employee</h3>\n                        <div className=\"card-body\">\n                            <form>\n                                <div className=\"form-group\">\n                                    <label>First Name:</label>\n                                    <input\n                                        placeholder=\"First Name\"\n                                        name=\"firstName\"\n                                        className=\"form-control\"\n                                        value={employee.firstName}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Last Name:</label>\n                                    <input\n                                        placeholder=\"Last Name\"\n                                        name=\"lastName\"\n                                        className=\"form-control\"\n                                        value={employee.lastName}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Email Id:</label>\n                                    <input\n                                        placeholder=\"Email Address\"\n                                        name=\"emailId\"\n                                        className=\"form-control\"\n                                        value={employee.emailId}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n\n                                <button className=\"btn btn-success\" onClick={updateEmployee}>Save</button>\n                                <button className=\"btn btn-danger\" onClick={cancel} style={{ marginLeft: \"10px\" }}>Cancel</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default UpdateEmployeeComponent;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService';\n\nconst ViewEmployeeComponent = () => {\n    const { id } = useParams();\n    const [employee, setEmployee] = useState({});\n\n    useEffect(() => {\n        EmployeeService.getEmployeeById(id).then((res) => {\n            setEmployee(res.data);\n        });\n    }, [id]);\n\n    return (\n        <div>\n            <br />\n            <div className=\"card col-md-6 offset-md-3\">\n                <h3 className=\"text-center\">View Employee Details</h3>\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <label>Employee First Name:</label>\n                        <div>{employee.firstName}</div>\n                    </div>\n                    <div className=\"row\">\n                        <label>Employee Last Name:</label>\n                        <div>{employee.lastName}</div>\n                    </div>\n                    <div className=\"row\">\n                        <label>Employee Email ID:</label>\n                        <div>{employee.emailId}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ViewEmployeeComponent;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HeaderComponent from './components/HeaderComponent';\nimport FooterComponent from './components/FooterComponent';\nimport ListEmployeeComponent from './components/ListEmployeeComponent';\nimport CreateEmployeeComponent from './components/CreateEmployeeComponent';\nimport UpdateEmployeeComponent from './components/UpdateEmployeeComponent';\nimport ViewEmployeeComponent from './components/ViewEmployeeComponent';\n\nconst App = () => {\n    return (\n        <Router>\n            <div id=\"root\">\n                <HeaderComponent />\n                <div className=\"content container\">\n                    <Switch>\n                        <Route path=\"/\" exact component={ListEmployeeComponent} />\n                        <Route path=\"/employees\" component={ListEmployeeComponent} />\n                        <Route path=\"/add-employee/:id\" component={CreateEmployeeComponent} />\n                        <Route path=\"/view-employee/:id\" component={ViewEmployeeComponent} />\n//                        <Route path=\"/update-employee/:id\" component={UpdateEmployeeComponent} />\n                    </Switch>\n                </div>\n                <FooterComponent />\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}